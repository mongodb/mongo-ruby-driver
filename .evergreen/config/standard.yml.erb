<%
  topologies = %w( standalone replica-set sharded-cluster )

  # jruby-9.4 is available in the toolchain, but tests break. It will
  # require some investigation. Once available:
  #  1. replace jruby-9.3 with jruby-9.4 in `recent_rubies` and
  #     `sample_rubies`.
  #  2. add jruby-9.4 to the front of `jrubies`.

  # latest_ruby = the most recently released, stable version of Ruby
  #    (make sure this version is being built by 10gen/mongo-ruby-toolchain)
  latest_ruby = "ruby-3.2".inspect # so it gets quoted as a string

  # these are used for testing against a few recent ruby versions
  recent_rubies = %w( ruby-3.2 ruby-3.1 jruby-9.3 )

  # this is a list of the most most recent 3.x and 2.x MRI ruby versions
  sample_mri_rubies = %w( ruby-3.2 ruby-2.7 )

  # as above, but including the most recent JRuby release
  sample_rubies = sample_mri_rubies + %w( jruby-9.3 )

  # older Ruby versions provided by 10gen/mongo-ruby-toolchain
  older_rubies = %w( ruby-3.0 ruby-2.7 ruby-2.6 ruby-2.5 )

  # all supported JRuby versions provided by 10gen/mongo-ruby-toolchain
  jrubies = %w( jruby-9.3 jruby-9.2 )

  supported_mri_rubies = %w( ruby-3.2 ruby-3.1 ruby-3.0
                             ruby-2.7 ruby-2.6 ruby-2.5 )

  supported_rubies = supported_mri_rubies + jrubies

  # The latest stable version of MongoDB
  latest_stable_mdb = "6.0".inspect # so it gets quoted as a string

  # A few of the most recent MongoDB versions
  actual_and_upcoming_mdb = %w( latest 7.0 6.0 )
  recent_mdb = %w( 6.0 5.3 )
  latest_5x_mdb = "5.3".inspect # so it gets quoted as a string
%>

buildvariants:
  - matrix_name: "auth/ssl"
    matrix_spec:
      auth-and-ssl: ["auth-and-ssl", "noauth-and-nossl"]
      ruby: <%= latest_ruby %>
      mongodb-version: <%= actual_and_upcoming_mdb %>
      topology: <%= topologies %>
      os: rhel8
    display_name: ${auth-and-ssl} ${ruby} ${topology}
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "mongo-recent"
    matrix_spec:
      ruby: <%= recent_rubies %>
      mongodb-version: <%= actual_and_upcoming_mdb %>
      topology: <%= topologies %>
      os: ['rhel8']
      # There is no latest for ubuntu2204, so we can't test it here.
      # os: ['rhel8', 'ubuntu2204']
    display_name: "${mongodb-version} ${os} ${topology} ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  # Only JRuby-9.4 is built for arm in the current toolchain, but 9.4 has other
  # issues. Either we fix those issues, or we build 9.3 for arm in the toolchain,
  # and hope it fixes the issues... Until then, we can only test MRI ruby on arm.
  #
  # further: 'latest' is broken until the QE2 changes are merged (RUBY-3211,
  # RUBY-3226)
  - matrix_name: "mongo-recent-arm"
    matrix_spec:
      ruby: <%= latest_ruby %>
      #mongodb-version: ['latest', '6.0']
      mongodb-version: ['6.0']
      topology: <%= topologies %>
      os: 'rhel8-arm'
    display_name: "${mongodb-version} ${os} ${topology} ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "mongo-5.x"
    matrix_spec:
      ruby: <%= sample_rubies %>
      mongodb-version: ['5.3', '5.0']
      topology: <%= topologies %>
      os: rhel8
    display_name: "${mongodb-version} ${topology} ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "mongo-4.x"
    matrix_spec:
      ruby: <%= older_rubies %>
      mongodb-version: ['4.4', '4.2', '4.0']
      topology: <%= topologies %>
      os: rhel8
    display_name: "${mongodb-version} ${topology} ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "mongo-3.6"
    matrix_spec:
      ruby: "ruby-2.5"
      mongodb-version: ['3.6']
      topology: <%= topologies %>
      os: rhel8
    display_name: "${mongodb-version} ${topology} ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "single-lb"
    matrix_spec:
      ruby: <%= latest_ruby %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: load-balanced
      single-mongos: single-mongos
      os: rhel8
    display_name: "${mongodb-version} ${topology} single-lb ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "mongo-5.0-api-version"
    matrix_spec:
      ruby: <%= latest_ruby %>
      mongodb-version: '5.0'
      topology: standalone
      api-version-required: yes
      os: rhel8
    display_name: "${mongodb-version} api-version-required ${topology} ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "single-mongos"
    matrix_spec:
      ruby: <%= latest_ruby %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: "sharded-cluster"
      single-mongos: single-mongos
      os: rhel8
    display_name: "${mongodb-version} ${topology} single-mongos ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "no-retry-reads"
    matrix_spec:
      retry-reads: no-retry-reads
      ruby: <%= latest_ruby %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: <%= topologies %>
      os: rhel8
    display_name: "${mongodb-version} ${topology} ${retry-reads} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "no-retry-writes"
    matrix_spec:
      retry-writes: no-retry-writes
      ruby: <%= latest_ruby %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: [replica-set, sharded-cluster]
      os: rhel8
    display_name: "${mongodb-version} ${topology} ${retry-writes} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: mmapv1
    matrix_spec:
      ruby: "ruby-2.5"
      mongodb-version: ['3.6', '4.0']
      topology: <%= topologies %>
      storage-engine: mmapv1
      os: rhel8
    display_name: "${mongodb-version} ${topology} mmapv1 ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "lint"
    matrix_spec:
      lint: on
      ruby: <%= latest_ruby %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: '*'
      os: rhel8
    display_name: "${mongodb-version} ${topology} ${lint} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "fork"
    matrix_spec:
      fork: on
      ruby: <%= latest_ruby %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: <%= topologies %>
      os: rhel8
    display_name: "${mongodb-version} ${topology} fork ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "solo"
    matrix_spec:
      solo: on
      ruby: <%= supported_rubies %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: <%= topologies %>
      os: rhel8
    display_name: "${mongodb-version} ${topology} solo ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "stress older"
    matrix_spec:
      stress: on
      ruby: ["ruby-2.7"]
      mongodb-version: ['4.2', '4.0', '3.6']
      topology: replica-set
      os: rhel8
    display_name: "${mongodb-version} ${topology} stress ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "stress"
    matrix_spec:
      stress: on
      ruby: <%= latest_ruby %>
      mongodb-version: <%= recent_mdb %>
      topology: replica-set
      os: rhel8
    display_name: "${mongodb-version} ${topology} stress ${ruby}"
    tasks:
      - name: "test-mlaunch"

  # The X.509 tests are failing with exceptions being expected, but never
  # raised. (RUBY-3267)
  #
  # - matrix_name: "x509-tests"
  #   matrix_spec:
  #     auth-and-ssl: "x509"
  #     ruby: <%= latest_ruby %>
  #     # needs the latest_5x_mdb because run-tests.sh uses `mongo` to configure
  #     # the server for certain auth mechanisms. Once run-tests.sh is made smart
  #     # enough to install mongosh, and then use either mongo or mongosh
  #     # (depending on server version and what's available), we can bump this to
  #     # the latest stable db version.
  #     mongodb-version: <%= latest_5x_mdb %>
  #     topology: standalone
  #     os: rhel8
  #   display_name: "${mongodb-version} ${topology} ${auth-and-ssl} ${ruby}"
  #   tasks:
  #     - name: "test-mlaunch"

  - matrix_name: "jruby-auth"
    matrix_spec:
      auth-and-ssl: [ "auth-and-ssl", "noauth-and-nossl" ]
      ruby: <%= jrubies.first %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: <%= topologies %>
      os: rhel8
    display_name: "${mongodb-version} ${topology} ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "zlib"
    matrix_spec:
      auth-and-ssl: [ "auth-and-ssl", "noauth-and-nossl" ]
      ruby: <%= sample_rubies %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: "replica-set"
      compressor: 'zlib'
      os: rhel8
    display_name: "${compressor} ${mongodb-version} ${topology} ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "snappy"
    matrix_spec:
      auth-and-ssl: [ "auth-and-ssl", "noauth-and-nossl" ]
      ruby: <%= sample_rubies %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: "replica-set"
      compressor: 'snappy'
      os: rhel8
    display_name: "${compressor} ${mongodb-version} ${topology} ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  # the zstd-ruby gem does not support JRuby (explicitly). However, there is
  # apparently a zstd-jni gem for JRuby that we could investigate here; if
  # this test is ever supported to support jruby, the `sample_mri_rubies`
  # reference should be replaced with `sample_rubies`.
  - matrix_name: "zstd-auth"
    matrix_spec:
      auth-and-ssl: [ "auth-and-ssl", "noauth-and-nossl" ]
      ruby: <%= sample_mri_rubies %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: "replica-set"
      compressor: 'zstd'
      os: rhel8
    display_name: "${compressor} ${mongodb-version} ${topology} ${auth-and-ssl} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "activesupport"
    matrix_spec:
      ruby: <%= sample_rubies %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: replica-set
      as: as
      os: rhel8
    display_name: "AS ${mongodb-version} ${topology} ${ruby}"
    tasks:
      - name: "test-mlaunch"

  - matrix_name: "bson"
    matrix_spec:
      ruby: <%= sample_rubies %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: replica-set
      bson: "*"
      os: rhel8
    display_name: "AS ${mongodb-version} ${topology} ${ruby} ${bson}"
    tasks:
      - name: "test-mlaunch"

  # kerberos integration tests are broken (RUBY-3266)
  # - matrix_name: "kerberos-integration"
  #   matrix_spec:
  #     ruby: <%= sample_rubies %>
  #     os: rhel8
  #   display_name: "Kerberos integration ${os} ${ruby}"
  #   tasks:
  #     - name: "test-kerberos-integration"

  - matrix_name: "kerberos-unit"
    matrix_spec:
      ruby: <%= latest_ruby %>
      mongodb-version: <%= latest_stable_mdb %>
      topology: standalone
      os: rhel8
      auth-and-ssl: kerberos
    display_name: "Kerberos Tests"
    tasks:
      - name: "test-kerberos"

  - matrix_name: "fle-latest"
    matrix_spec:
      auth-and-ssl: "noauth-and-nossl"
      ruby: <%= latest_ruby %>
      topology: [replica-set, sharded-cluster]
      mongodb-version: [ 'latest', '7.0' ]
      os: rhel8
      fle: helper
    display_name: "FLE: ${mongodb-version} ${topology} ${ruby}"
    tasks:
      - name: "test-fle"

  - matrix_name: "fle"
    matrix_spec:
      auth-and-ssl: "noauth-and-nossl"
      ruby: <%= sample_mri_rubies %>
      topology: [replica-set, sharded-cluster]
      mongodb-version: [ '6.0', '4.4', '4.2', '4.0' ]
      os: rhel8
      fle: helper
    display_name: "FLE: ${mongodb-version} ${topology} ${ruby}"
    tasks:
      - name: "test-fle"

  - matrix_name: aws-auth-regular
    matrix_spec:
      auth-and-ssl: [ aws-regular, aws-assume-role, aws-ec2, aws-ecs, aws-web-identity ]
      ruby: <%= latest_ruby %>
      topology: standalone
      # needs the latest_5x_mdb because run-tests.sh uses `mongo` to configure
      # the server for certain auth mechanisms. Once run-tests.sh is made smart
      # enough to install mongosh, and then use either mongo or mongosh
      # (depending on server version and what's available), we can bump this to
      # the latest stable db version.
      mongodb-version: <%= latest_5x_mdb %>
      os: rhel8
    display_name: "AWS ${auth-and-ssl} ${mongodb-version} ${ruby}"
    tasks:
      - name: "test-aws-auth"

  - matrix_name: ocsp-verifier
    matrix_spec:
      ocsp-verifier: true
      # No JRuby due to https://github.com/jruby/jruby-openssl/issues/210
      ruby: <%= supported_mri_rubies %>
      topology: standalone
      mongodb-version: <%= latest_stable_mdb %>
      os: rhel8
    display_name: "OCSP verifier: ${mongodb-version} ${ruby}"
    tasks:
      - name: test-mlaunch

  - matrix_name: ocsp-must-staple
    matrix_spec:
      ocsp-algorithm: ecdsa
      ocsp-must-staple: on
      ocsp-delegate: on
      ruby: <%= sample_mri_rubies %>
      topology: standalone
      mongodb-version: <%= latest_stable_mdb %>
      os: rhel8
      auth-and-ssl: noauth-and-ssl
    display_name: "OCSP integration - must staple: ${mongodb-version} ${ruby}"
    tasks:
      - name: test-mlaunch

  - matrix_name: ocsp-unknown
    matrix_spec:
      ocsp-algorithm: rsa
      ocsp-status: unknown
      ruby: <%= sample_mri_rubies %>
      topology: standalone
      mongodb-version: <%= latest_stable_mdb %>
      os: rhel8
      auth-and-ssl: noauth-and-ssl
    display_name: "OCSP integration - unknown: ${mongodb-version} ${ruby}"
    tasks:
      - name: test-mlaunch

  <% [
    %w(valid none pass),
    %w(unknown none pass),
    %w(revoked none fail),

    %w(valid tlsInsecure=true pass),
    %w(unknown tlsInsecure=true pass),
    %w(revoked tlsInsecure=true pass),

    %w(valid tlsAllowInvalidCertificates=true pass),
    %w(unknown tlsAllowInvalidCertificates=true pass),
    %w(revoked tlsAllowInvalidCertificates=true pass),
  ].each do |status, extra_uri_options, outcome|
  %>
  - matrix_name: ocsp-connectivity
    matrix_spec:
      ocsp-algorithm: '*'
      ocsp-status: <%= status %>
      ocsp-delegate: '*'
      ocsp-connectivity: <%= outcome %>
      extra-uri-options: "<%= extra_uri_options %>"
      ruby: <%= sample_mri_rubies %>
      topology: standalone
      mongodb-version: <%= latest_stable_mdb %>
      os: rhel8
    display_name: "OCSP connectivity: ${ocsp-algorithm} ${ocsp-status} ${ocsp-delegate} ${extra-uri-options} ${mongodb-version} ${ruby}"
    tasks:
      - name: test-mlaunch
  <% end %>

  - matrix_name: ocsp-connectivity-jruby
    matrix_spec:
      # ECDSA does not work on JRuby.
      # https://github.com/jruby/jruby-openssl/issues/213
      ocsp-algorithm: rsa
      # We do not perform OCSP verification on JRuby, therefore the revoked
      # configuration fails (connection succeeds due to lack of verification
      # when it is expected to fail).
      # https://github.com/jruby/jruby-openssl/issues/210
      ocsp-status: [valid, unknown]
      ocsp-delegate: '*'
      ocsp-connectivity: pass
      ruby: <%= jrubies.first %>
      topology: standalone
      mongodb-version: <%= latest_stable_mdb %>
      os: rhel8
    display_name: "OCSP connectivity: ${ocsp-algorithm} ${ocsp-status} ${ocsp-delegate} ${mongodb-version} ${ruby}"
    tasks:
      - name: test-mlaunch

  - matrix_name: testgcpkms-variant
    matrix_spec:
      ruby: <%= latest_ruby %>
      fle: helper
      topology: standalone
      os: rhel8
      mongodb-version: <%= latest_stable_mdb %>
    display_name: "GCP KMS"
    tasks:
      - name: testgcpkms_task_group
        batchtime: 20160 # Use a batchtime of 14 days as suggested by the CSFLE test README

  - matrix_name: testazurekms-variant
    matrix_spec:
      ruby: ruby-3.0
      fle: helper
      topology: standalone
      os: debian11 # could eventually look at updating this to rhel80
      mongodb-version: 6.0
    display_name: "AZURE KMS"
    tasks:
      - name: testazurekms_task_group
        batchtime: 20160 # Use a batchtime of 14 days as suggested by the CSFLE test README

  - matrix_name: "atlas"
    matrix_spec:
      ruby: <%= supported_rubies %>
      os: rhel8
    display_name: "Atlas tests ${ruby}"
    tasks:
       - name: test-atlas

  - matrix_name: "serverless"
    matrix_spec:
      # https://jira.mongodb.org/browse/RUBY-3217
      # ruby: <%= supported_rubies %>
      ruby: <%= supported_mri_rubies %>
      fle: path
      os: rhel8
    display_name: "Atlas serverless ${ruby} single mongos"
    tasks:
       - name: test-serverless
