database_name: &database_name "ruby-driver"
collection_name: &collection_name "test"

data: []

tests:
  -
    description: commitTransaction is not retried after write concern error (WriteConcernFailed)
    failPoint:
      configureFailPoint: failCommand
      mode: { times: 1 }
      data:
          failCommands: ["commitTransaction"]
          closeConnection: false
          writeConcernError:
            code: 64
            codeName: WriteConcernFailed
            errmsg: "waiting for replication timed out"
            errInfo: { wtimeout: true }
    operations:
      -
        name: withTransaction
        object: session0
        callback:
          operations:
            -
              name: insertOne
              object: collection
              arguments:
                session: session0
                document: { _id: 1 }
              result:
                insertedId: 1
        result:
          errorCodeName: WriteConcernFailed
          # Per transactions spec, drivers add UnknownTransactionCommitResult
          # label for WriteConcernFailed errors
          errorLabelsContain: ["UnknownTransactionCommitResult"]
          errorLabelsOmit: ["TransientTransactionError"]
    expectations:
      -
        command_started_event:
          command:
            insert: *collection_name
            documents:
              - { _id: 1 }
            ordered: true
            lsid: session0
            txnNumber: { $numberLong: "1" }
            startTransaction: true
            autocommit: false
            # omitted fields
            readConcern: ~
            writeConcern: ~
          command_name: insert
          database_name: *database_name
      -
        command_started_event:
          command:
            commitTransaction: 1
            lsid: session0
            txnNumber: { $numberLong: "1" }
            autocommit: false
            # omitted fields
            readConcern: ~
            startTransaction: ~
            writeConcern: ~
          command_name: commitTransaction
          database_name: admin
    outcome:
      collection:
        data: []
  -
    description: commitTransaction is not retried after write concern error (UnknownReplWriteConcern)
    failPoint:
      configureFailPoint: failCommand
      mode: { times: 1 }
      data:
          failCommands: ["commitTransaction"]
          closeConnection: false
          writeConcernError:
            code: 79
            codeName: UnknownReplWriteConcern
            errmsg: "No write concern mode named 'foo' found in replica set configuration"
    operations:
      -
        name: withTransaction
        object: session0
        callback:
          operations:
            -
              name: insertOne
              object: collection
              arguments:
                session: session0
                document: { _id: 1 }
              result:
                insertedId: 1
        result:
          errorCodeName: UnknownReplWriteConcern
          errorLabelsOmit: ["TransientTransactionError", "UnknownTransactionCommitResult"]
    expectations:
      -
        command_started_event:
          command:
            insert: *collection_name
            documents:
              - { _id: 1 }
            ordered: true
            lsid: session0
            txnNumber: { $numberLong: "1" }
            startTransaction: true
            autocommit: false
            # omitted fields
            readConcern: ~
            writeConcern: ~
          command_name: insert
          database_name: *database_name
      -
        command_started_event:
          command:
            commitTransaction: 1
            lsid: session0
            txnNumber: { $numberLong: "1" }
            autocommit: false
            # omitted fields
            readConcern: ~
            startTransaction: ~
            writeConcern: ~
          command_name: commitTransaction
          database_name: admin
    outcome:
      collection:
        data: []
  -
    description: commitTransaction is not retried after write concern error (UnsatisfiableWriteConcern)
    failPoint:
      configureFailPoint: failCommand
      mode: { times: 1 }
      data:
          failCommands: ["commitTransaction"]
          closeConnection: false
          writeConcernError:
            code: 100
            codeName: UnsatisfiableWriteConcern
            errmsg: "Not enough data-bearing nodes"
    operations:
      -
        name: withTransaction
        object: session0
        callback:
          operations:
            -
              name: insertOne
              object: collection
              arguments:
                session: session0
                document: { _id: 1 }
              result:
                insertedId: 1
        result:
          errorCodeName: UnsatisfiableWriteConcern
          errorLabelsOmit: ["TransientTransactionError", "UnknownTransactionCommitResult"]
    expectations:
      -
        command_started_event:
          command:
            insert: *collection_name
            documents:
              - { _id: 1 }
            ordered: true
            lsid: session0
            txnNumber: { $numberLong: "1" }
            startTransaction: true
            autocommit: false
            # omitted fields
            readConcern: ~
            writeConcern: ~
          command_name: insert
          database_name: *database_name
      -
        command_started_event:
          command:
            commitTransaction: 1
            lsid: session0
            txnNumber: { $numberLong: "1" }
            autocommit: false
            # omitted fields
            readConcern: ~
            startTransaction: ~
            writeConcern: ~
          command_name: commitTransaction
          database_name: admin
    outcome:
      collection:
        data: []
