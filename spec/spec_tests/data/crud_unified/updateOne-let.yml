description: "updateOne-let"

schemaVersion: "1.4"

createEntities:
  - client:
      id: &client0 client0
      observeEvents: [ commandStartedEvent ]
  - database:
      id: &database0 database0
      client: *client0
      databaseName: &database0Name crud-tests
  - collection:
      id: &collection0 collection0
      database: *database0
      collectionName: &collection0Name coll0

initialData: &initialData
  - collectionName: *collection0Name
    databaseName: *database0Name
    documents:
      - { _id: 1 }
      - { _id: 2 }

tests:
  # TODO: Once SERVER-57403 is resolved, this test can be removed in favor of
  # the "dollar-prefixed $literal value" test below.
  - description: "UpdateOne with let option"
    runOnRequirements:
      - minServerVersion: "5.0"
    operations:
      - name: updateOne
        object: *collection0
        arguments:
          filter: &filter
            $expr:
              $eq: [ "$_id", "$$id" ]
          update: &update
            - $set: {x: "$$x", y: "$$y" }
          let: &let0
            id: 1
            x: "foo"
            y: { $literal: "bar" }
        expectResult:
          matchedCount: 1
          modifiedCount: 1
          upsertedCount: 0
    expectEvents:
      - client: *client0
        events:
          - commandStartedEvent:
              command:
                update: *collection0Name
                updates:
                  -
                    q: *filter
                    u: *update
                let: *let0
    outcome:
      -
        collectionName: *collection0Name
        databaseName: *database0Name
        documents:
          - { _id: 1, x: "foo", y: "bar" }
          - { _id: 2 }

  - description: "UpdateOne with let option and dollar-prefixed $literal value"
    runOnRequirements:
      - minServerVersion: "5.0"
      # TODO: Remove topology restrictions once SERVER-57403 is resolved
        topologies: ["single", "replicaset"]
    operations:
      - name: updateOne
        object: *collection0
        arguments:
          filter: &filter
            $expr:
              $eq: [ "$_id", "$$id" ]
          update: &update
            - $set: {x: "$$x", y: "$$y" }
          let: &let0
            id: 1
            x: "foo"
            y: { $literal: "$bar" }
            rand: { $rand: {} }
        expectResult:
          matchedCount: 1
          modifiedCount: 1
          upsertedCount: 0
    expectEvents:
      - client: *client0
        events:
          - commandStartedEvent:
              command:
                update: *collection0Name
                updates:
                  -
                    q: *filter
                    u: *update
                let: *let0
    outcome:
      -
        collectionName: *collection0Name
        databaseName: *database0Name
        documents:
          - { _id: 1, x: "foo", y: "$bar" }
          - { _id: 2 }

  - description: "UpdateOne with let option unsupported (server-side error)"
    runOnRequirements:
      - minServerVersion: "2.6.0"
        maxServerVersion: "4.4.99"
    operations:
      - name: updateOne
        object: *collection0
        arguments:
          filter: &filter1
            _id: 1
          update: &update1
            - $set: {x: "$$x"}
          let: &let1
            x: foo
        expectError:
          # Older server versions may not report an error code, but the error
          # message is consistent between 2.6.x and 4.4.x server versions.
          errorContains: "'update.let' is an unknown field"
          isClientError: false
    expectEvents:
      - client: *client0
        events:
          - commandStartedEvent:
              command:
                update: *collection0Name
                updates:
                  -
                    q: *filter1
                    u: *update1
                let: *let1
    outcome:
      -
        collectionName: *collection0Name
        databaseName: *database0Name
        documents:
          - { _id: 1 }
          - { _id: 2 }
