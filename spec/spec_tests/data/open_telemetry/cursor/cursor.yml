description: cursor retrieval
schemaVersion: '1.26'
createEntities:
  - client:
      id: &client0 client0
      useMultipleMongoses: false
      observeTracingMessages:
        enableCommandPayload: true
  - database:
      id: &database0 database0
      client: *client0
      databaseName: cursor
  - collection:
      id: &collection0 collection0
      database: *database0
      collectionName: &collectionName0 test
initialData:
  - collectionName: test
    databaseName: cursor
    documents:
      - { _id: 1 }
      - { _id: 2 }
      - { _id: 3 }
      - { _id: 4 }
      - { _id: 5 }
      - { _id: 6 }
tests:
  - description: find with a cursor
    operations:
      - name: find
        object: *collection0
        arguments:
          filter: { _id: { $gt: 1 } }
          batchSize: 2
        expectResult:
          - { _id: 2 }
          - { _id: 3 }
          - { _id: 4 }
          - { _id: 5 }
          - { _id: 6 }
    expectTracingMessages:
      - client: *client0
        ignoreExtraSpans: false
        spans:
          - name: find cursor.test
            tags:
              db.system: mongodb
              db.namespace: cursor
              db.collection.name: test
              db.operation.name: find
              db.operation.summary: find cursor.test
            nested:
              - name: find cursor.test
                tags:
                  db.system: mongodb
                  db.namespace: cursor
                  db.collection.name: *collectionName0
                  db.command.name: find
                  network.transport: tcp
                  db.mongodb.cursor_id: { $$exists: false }
                  db.response.status_code: { $$exists: false }
                  exception.message: { $$exists: false }
                  exception.type: { $$exists: false }
                  exception.stacktrace: { $$exists: false }
                  server.address: { $$type: string }
                  server.port: { $$type: ['int', 'long'] }
                  db.query.summary: find
                  db.query.text:
                    $$matchAsDocument:
                      $$matchAsRoot:
                        find: test
                        filter: { _id: { $gt: 1 } }
                        batchSize: 2
                  db.mongodb.server_connection_id:
                    $$type: [ 'int', 'long' ]
                  db.mongodb.driver_connection_id:
                    $$type: [ 'int', 'long' ]

          - name: getMore cursor.test
            tags:
              db.system: mongodb
              db.namespace: cursor
              db.collection.name: *collectionName0
              db.command.name: getMore
              network.transport: tcp
              db.mongodb.cursor_id: { $$type: [ 'int', 'long' ] }
              db.response.status_code: { $$exists: false }
              exception.message: { $$exists: false }
              exception.type: { $$exists: false }
              exception.stacktrace: { $$exists: false }
              server.address: { $$type: string }
              server.port: { $$type: ['int', 'long'] }
              db.query.summary: getMore
              db.query.text:
                $$matchAsDocument:
                  $$matchAsRoot:
                    getMore: { $$type: long }
                    collection: test
                    batchSize: 2
              db.mongodb.server_connection_id:
                $$type: [ 'int', 'long' ]
              db.mongodb.driver_connection_id:
                $$type: [ 'int', 'long' ]

          - name: getMore cursor.test
            tags:
              db.system: mongodb
              db.namespace: cursor
              db.collection.name: *collectionName0
              db.command.name: getMore
              network.transport: tcp
              db.mongodb.cursor_id: { $$type: [ 'int', 'long' ] }
              db.response.status_code: { $$exists: false }
              exception.message: { $$exists: false }
              exception.type: { $$exists: false }
              exception.stacktrace: { $$exists: false }
              server.address: { $$type: string }
              server.port: { $$type: ['int', 'long'] }
              db.query.summary: getMore
              db.query.text:
                $$matchAsDocument:
                  $$matchAsRoot:
                    getMore: { $$type: long }
                    collection: test
                    batchSize: 2
              db.mongodb.server_connection_id:
                $$type: [ 'int', 'long' ]
              db.mongodb.driver_connection_id:
                $$type: [ 'int', 'long' ]
