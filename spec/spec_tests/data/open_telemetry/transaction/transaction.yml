description: transaction spans
schemaVersion: '1.26'
runOnRequirements:
  - minServerVersion: '4.0'
    topologies:
      - replicaset
  - minServerVersion: '4.1.8'
    topologies:
      - sharded
      - load-balanced
createEntities:
  - client:
      id: &client0 client0
      useMultipleMongoses: false
      observeTracingMessages:
        enableCommandPayload: true
  - database:
      id: &database0 database0
      client: *client0
      databaseName: transaction-tests
  - collection:
      id: &collection0 collection0
      database: *database0
      collectionName: test
  - session:
      id: &session0 session0
      client: client0
initialData:
  - collectionName: test
    databaseName: transaction-tests
    documents: []
tests:
  - description: observeTracingMessages around transaction
    operations:
      - object: *session0
        name: startTransaction
      - object: *collection0
        name: insertOne
        arguments:
          session: *session0
          document:
            _id: 1
      - object: *session0
        name: commitTransaction
      - name: find
        object: *collection0
        arguments: { filter: { x: 1 } }

    expectTracingMessages:
      - client: *client0
        ignoreExtraSpans: false
        spans:
          - name: transaction
            tags:
              db.system: mongodb
            nested:
              - name: insert transaction-tests.test
                tags:
                  db.system: mongodb
                db.namespace: transaction-tests
                db.collection.name: test
                db.operation.name: insert
                db.operation.summary: insert transaction-tests.test
                nested:
                  - name: command insert
                    tags:
                      db.system: mongodb
                    db.namespace: transaction-tests
                    server.address: { $$type: string }
                    server.port: { $$type: ['long', 'string'] }
                    server.type: { $$type: string }
                    db.query.summary: insert
                    db.query.text:
                      $$matchAsDocument:
                        $$matchAsRoot:
                          insert: test
                          ordered: true
                          txnNumber: 1
                          startTransaction: true
                          autocommit: false
                          documents:
                            - _id: 1
                    db.mongodb.lsid: { $$sessionLsid: *session0 }
              - name: commitTransaction admin.$cmd
                tags:
                  db.system: mongodb
                  nested:
                    - name: command commitTransaction
                      tags:
                        db.system: mongodb
                        db.query.text:
                          $$matchAsDocument:
                            $$matchAsRoot:
                              commitTransaction: 1
                              txnNumber: 1
                              autocommit: false
      - name: find transaction-tests.test
        tags: {}
        nested:
          - name: command find
            tags:
              db.system: mongodb
              db.namespace: transaction-tests
              server.address: { $$type: string }
              server.port: { $$type: ['long', 'string'] }
              server.type: { $$type: string }
              db.query.summary: find
    outcome:
      - collectionName: test
        databaseName: transaction-tests
        documents:
          - _id: 1
