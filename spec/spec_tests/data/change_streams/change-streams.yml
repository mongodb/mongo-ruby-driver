runOn:
    -
        minServerVersion: "3.6.0"
        topology: ["replicaset"]

collection_name: &collection_name "test"
database_name: &database_name "change-stream-tests"
collection2_name: &collection2_name "test2"
database2_name: &database2_name "change-stream-tests-2"
tests:
  -
    description: "$changeStream must be the first stage in a change stream pipeline sent to the server"
    target: collection
    changeStreamPipeline: []
    changeStreamOptions: {}
    operations:
      -
        database: *database_name
        collection: *collection_name
        name: insertOne
        arguments:
          document:
            x: 1
    expectations:
      -
        command_started_event:
          command:
            aggregate: *collection_name
            cursor: {}
            pipeline:
              -
                $changeStream:
                  fullDocument: default
          command_name: aggregate
          database_name: *database_name
    result:
      success:
        -
          _id: "42"
          documentKey: "42"
          operationType: insert
          ns:
            db: *database_name
            coll: *collection_name
          fullDocument:
            x:
              $numberInt: "1"
  -
    description: The server returns change stream responses in the specified server response format
    target: collection
    changeStreamPipeline: []
    changeStreamOptions: {}
    operations:
      -
        database: *database_name
        collection: *collection_name
        name: insertOne
        arguments:
          document:
            x: 1
    expectations: []
    result:
      success:
        -
          _id: "42"
          documentKey: "42"
          operationType: insert
          ns:
            db: *database_name
            coll: *collection_name
          fullDocument:
            x:
              $numberInt: "1"
  -
    description: Executing a watch helper on a Collection results in notifications for changes to the specified collection
    target: collection
    changeStreamPipeline: []
    changeStreamOptions: {}
    operations:
      -
        database: *database_name
        collection: *collection2_name
        name: insertOne
        arguments:
          document:
            x: 1
      -
        database: *database2_name
        collection: *collection_name
        name: insertOne
        arguments:
          document:
            y: 2
      -
        database: *database_name
        collection: *collection_name
        name: insertOne
        arguments:
          document:
            z: 3
    expectations:
      - 
        command_started_event:
          command:
            aggregate: *collection_name
            cursor: {}
            pipeline:
              - 
                $changeStream:
                  fullDocument: default
          command_name: aggregate
          database_name: *database_name
    result:
      success:
        -
          operationType: insert
          ns:
            db: *database_name
            coll: *collection_name
          fullDocument:
            z:
              $numberInt: "3"
  -
    description: Change Stream should allow valid aggregate pipeline stages
    target: collection
    changeStreamPipeline:
      -
        $match:
          "fullDocument.z": 3
    changeStreamOptions: {}
    operations:
      -
        database: *database_name
        collection: *collection_name
        name: insertOne
        arguments:
          document:
            y: 2
      -
        database: *database_name
        collection: *collection_name
        name: insertOne
        arguments:
          document:
            z: 3
    expectations:
      -
        command_started_event:
          command:
            aggregate: *collection_name
            cursor: {}
            pipeline:
              - 
                $changeStream:
                  fullDocument: default
              -
                $match:
                  "fullDocument.z":
                    $numberInt: "3"
          command_name: aggregate
          database_name: *database_name
    result:
      success:
        -
          operationType: insert
          ns:
            db: *database_name
            coll: *collection_name
          fullDocument:
            z:
              $numberInt: "3"
  -
    description: Test insert, update, replace, and delete event types
    target: collection
    changeStreamPipeline: []
    changeStreamOptions: {}
    operations:
      -
        database: *database_name
        collection: *collection_name
        name: insertOne
        arguments:
          document:
            x: 1
      -
        database: *database_name
        collection: *collection_name
        name: updateOne
        arguments:
          filter:
            x: 1
          update:
            $set:
              x: 2
      -
        database: *database_name
        collection: *collection_name
        name: replaceOne
        arguments:
          filter:
            x: 2
          replacement:
            x: 3
      -
        database: *database_name
        collection: *collection_name
        name: deleteOne
        arguments:
          filter:
            x: 3
    expectations:
      -
        command_started_event:
          command:
            aggregate: *collection_name
            cursor: {}
            pipeline:
              -
                $changeStream:
                  fullDocument: default
          command_name: aggregate
          database_name: *database_name
    result:
      success:
        -
          operationType: insert
          ns:
            db: *database_name
            coll: *collection_name
          fullDocument:
            x:
              $numberInt: "1"
        -
          operationType: update
          ns:
            db: *database_name
            coll: *collection_name
          updateDescription:
            updatedFields:
              x:
                $numberInt: "2"
        -
          operationType: replace
          ns:
            db: *database_name
            coll: *collection_name
          fullDocument:
            x:
              $numberInt: "3"
        -
          operationType: delete
          ns:
            db: *database_name
            coll: *collection_name
